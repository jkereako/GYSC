#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# GYSC
# generator.py
#
# Created by Jeff Kereakoglow on 8/31/18.
# Copyright Â© 2018 AlexisDigital. All rights reserved.

import os
import time
from swagger import Swagger

# http://petstore.swagger.io/v2/swagger.json
class Generator(object):
    def __init__(self, swagger):
        if type(swagger) is not Swagger:
            raise TypeError("Expected a Swagger object")

        self.swagger = swagger

    def generate(self):
        directory = "../contracts"
        self.mkdir(directory)

        definitions = self.swagger.parse_definitions()

        structs = definitions["structs"]
        enums = definitions["enums"]

        for contract_name in structs.keys():
            properties = structs[contract_name]

            with open(directory + '/' + contract_name + ".swift", 'w') as file:
                
                # Doc block
                file.write("//\n")
                file.write("//  " + contract_name + ".swift\n")
                file.write("//\n")
                file.write("//  Generated by gysc on " + time.strftime("%d/%m/%y") + "\n")
                file.write("//  https://github.com/jkereako/GYSC\n")
                file.write("//\n")
                file.write("\n")

                # Source code
                file.write("struct " + contract_name + ": Codable {\n")

                for property_name in properties.keys():
                    property_type = properties[property_name]
                    file.write("    let " + property_name + ": " + property_type + "\n")

                file.write('}')
                file.write("\n")

        for contract_name in enums.keys():
            properties = enums[contract_name]

            with open(directory + '/' + contract_name + ".swift", 'w') as file:
                
                # Doc block
                file.write("//\n")
                file.write("//  " + contract_name + ".swift\n")
                file.write("//\n")
                file.write("//  Generated by gysc on " + time.strftime("%d/%m/%y") + "\n")
                file.write("//  https://github.com/jkereako/GYSC\n")
                file.write("//\n")
                file.write("\n")

                # Source code
                file.write("enum " + contract_name + " {\n")

                for property_name in properties.keys():
                    property_type = properties[property_name]
                    file.write("    case " + property_name + "\n")

                file.write('}')
                file.write("\n")

    def mkdir(self, dir):
        if not os.path.exists(dir):
            os.mkdir(dir)

def main():
    try:
        swagger = Swagger("../temp/swagger.json")
        generator = Generator(swagger)

        generator.generate()

    except ValueError:
        # TODO: Report an error to the Shell script
        print("Failed to parse the JSON file")

if __name__ == "__main__":
    main()